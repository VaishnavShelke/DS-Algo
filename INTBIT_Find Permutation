Given a positive integer n and a string s consisting only of letters D or I, you have to find any permutation of first n positive integer that satisfy the given input string.

D means the next number is smaller, while I means the next number is greater.

Notes

Length of given string s will always equal to n - 1
Your solution should run in linear time and space.
Example :

Input 1:

n = 3

s = ID

Return: [1, 3, 2]


My Approach
  Initialize an array of length n+1
  start by arr[0] = 0;
  Now
    If str[i]  == I{
      arr[i+1] = arr[i] + 1
    }
    else{
      arr[i+1] = arr[i] - 1
    }
    
Make an array of pointers to different elements in arr.                // Makes solution n*logn
And sort the array of pointer according to the value in them

and fill the values from 1 --> n via these pointers


Approach By InterviewBit:
    if (str[i] == I)
       add smallest element to answer smallest++;
    else
        add largest element to the answer largest--;



