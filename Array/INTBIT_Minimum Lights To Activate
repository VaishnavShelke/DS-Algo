Problem Description

There is a corridor in a Jail which is N units long. Given an array A of size N. The ith index of this array is 0 if the light at ith position is faulty otherwise it is 1.

All the lights are of specific power B which if is placed at position X, it can light the corridor from [ X-B+1, X+B-1].

Initially all lights are off.

Return the minimum number of lights to be turned ON to light the whole corridor or -1 if the whole corridor cannot be lighted.
  
My Approach:
    This problem is a greedy algorithm problem. For eery index , wether it contains 1 or 0 we switch ont the rightmost 1 in the range.
    Thus the entire current index is illuminated. Now rather than moving to index + 1 we move to right_most + B and perform the same steps as before.
    
Alternative Approach:
    Other not very good approach is to for a pair of [ leftmost, rightmost] as a slab of the region within distance of B about any place with value 1
    Initialize a variable "right" which will store the rightmost illuminated location + 1 and initialize it as 0;
    
    loop{
      Now consider first slab if the [ leftmost] of first slab > right then the right location cannot be illuminated. hence return;

      if right <= [ leftmost]:
        while loop until last slab is obtained where this contition { right < [ leftmost]} is preserved. 
        slab_index = i;

      Now this slab_index is actually the slab which is supposed to be illuminated.
      increase the count by 1
      and change the right to slabs[ slab_index].rightmost + 1

      Do it until right < n;  
    }
    The final count is the answer
    
